11-Session Hijacking

    Perform session hijacking
            Session hijacking can be divided into three broad phases:
                Tracking the Connection: The attacker uses a network sniffer to track a victim and host, or uses a tool such as Nmap to scan the network for a target with a TCP sequence that is easy to predict
                
                Desynchronizing the Connection: A desynchronized state occurs when a connection between the target and host has been established, or is stable with no data transmission, or when the server’s sequence number is not equal to the client’s acknowledgment number (or vice versa)

                Injecting the Attacker’s Packet: Once the attacker has interrupted the connection between the server and target, they can either inject data into the network or actively participate as the man-in-the-middle, passing data between the target and server, while reading and injecting data at will


        Hijack a session using Zed Attack Proxy (ZAP)
            The Break tab allows you to modify a response or request when ZAP has caught it. It also allows you to modify certain elements that you cannot modify through your browser, including:
                The header
                Hidden fields
                Disabled fields
                Fields that use JavaScript to filter out illegal characters

            Using owasp zap as a proxy to change the webpage accesing, MITM

        Intercept HTTP traffic using bettercap
            -bettercap -iface eth0 
                -iface: specifies the interface to bind to (in this example, eth0).
            -Type net.probe on and press Enter. This module will send different types of probe packets to each IP in the current subnet for the net.recon module to detect them.
            -Type net.recon on and press Enter. This module is responsible for periodically reading the system ARP table to detect new hosts on the network.
            -set http.proxy.sslstrip true and press Enter. This module enables SSL stripping.
            -set arp.spoof.internal true and press Enter. This module spoofs the local connections among computers of the internal network.
            -set arp.spoof.targets 10.10.10.10 and press Enter. This module spoofs the IP address of the target host.
            -arp.spoof on and press Enter. This module initiates arp spoofing.
            -net.sniff on and press Enter. This module is responsible for performing sniffing on the network.
            -set net.sniff.regexp ‘.*password=.+’ 

            Despues se detecta el trafico hasta robar credenciales

    Detect session hijacking
        Detect session hijacking using Wireshark
            the Windows 10 machine and observe the huge number of ARP packets captured by the Wireshark, as shown in the screenshot.
            bettercap sends several ARP broadcast requests to the hosts (or potentially active hosts). A high number of ARP requests indicates that the system at 10.10.10.13 (the attacker’s system in this task) is acting as a client for all the IP addresses in the subnet, which means that all the packets from the victim node (in this case, 10.10.10.10) will first go to the host system (10.10.10.13), and then the gateway. Similarly, any packet destined for the victim node is first forwarded from the gateway to the host system, and then from the host system to the victim node.